// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// like_calc_nbinom
NumericVector like_calc_nbinom(int no_J, int no_I, int no_T, int no_L, List lambda_can, double d, List dat);
RcppExport SEXP sourceR_like_calc_nbinom(SEXP no_JSEXP, SEXP no_ISEXP, SEXP no_TSEXP, SEXP no_LSEXP, SEXP lambda_canSEXP, SEXP dSEXP, SEXP datSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type no_J(no_JSEXP);
    Rcpp::traits::input_parameter< int >::type no_I(no_ISEXP);
    Rcpp::traits::input_parameter< int >::type no_T(no_TSEXP);
    Rcpp::traits::input_parameter< int >::type no_L(no_LSEXP);
    Rcpp::traits::input_parameter< List >::type lambda_can(lambda_canSEXP);
    Rcpp::traits::input_parameter< double >::type d(dSEXP);
    Rcpp::traits::input_parameter< List >::type dat(datSEXP);
    __result = Rcpp::wrap(like_calc_nbinom(no_J, no_I, no_T, no_L, lambda_can, d, dat));
    return __result;
END_RCPP
}
// like_calc_pois
NumericVector like_calc_pois(int no_J, int no_I, int no_T, int no_L, List lambda_can, double d, List dat);
RcppExport SEXP sourceR_like_calc_pois(SEXP no_JSEXP, SEXP no_ISEXP, SEXP no_TSEXP, SEXP no_LSEXP, SEXP lambda_canSEXP, SEXP dSEXP, SEXP datSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type no_J(no_JSEXP);
    Rcpp::traits::input_parameter< int >::type no_I(no_ISEXP);
    Rcpp::traits::input_parameter< int >::type no_T(no_TSEXP);
    Rcpp::traits::input_parameter< int >::type no_L(no_LSEXP);
    Rcpp::traits::input_parameter< List >::type lambda_can(lambda_canSEXP);
    Rcpp::traits::input_parameter< double >::type d(dSEXP);
    Rcpp::traits::input_parameter< List >::type dat(datSEXP);
    __result = Rcpp::wrap(like_calc_pois(no_J, no_I, no_T, no_L, lambda_can, d, dat));
    return __result;
END_RCPP
}
// calc_li
List calc_li(int no_J, int no_I, int no_T, int no_L, List r, List a, List prev, NumericVector q);
RcppExport SEXP sourceR_calc_li(SEXP no_JSEXP, SEXP no_ISEXP, SEXP no_TSEXP, SEXP no_LSEXP, SEXP rSEXP, SEXP aSEXP, SEXP prevSEXP, SEXP qSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type no_J(no_JSEXP);
    Rcpp::traits::input_parameter< int >::type no_I(no_ISEXP);
    Rcpp::traits::input_parameter< int >::type no_T(no_TSEXP);
    Rcpp::traits::input_parameter< int >::type no_L(no_LSEXP);
    Rcpp::traits::input_parameter< List >::type r(rSEXP);
    Rcpp::traits::input_parameter< List >::type a(aSEXP);
    Rcpp::traits::input_parameter< List >::type prev(prevSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type q(qSEXP);
    __result = Rcpp::wrap(calc_li(no_J, no_I, no_T, no_L, r, a, prev, q));
    return __result;
END_RCPP
}
// calc_lj
List calc_lj(int no_J, int no_I, int no_T, int no_L, List r, List a, List prev, NumericVector q);
RcppExport SEXP sourceR_calc_lj(SEXP no_JSEXP, SEXP no_ISEXP, SEXP no_TSEXP, SEXP no_LSEXP, SEXP rSEXP, SEXP aSEXP, SEXP prevSEXP, SEXP qSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type no_J(no_JSEXP);
    Rcpp::traits::input_parameter< int >::type no_I(no_ISEXP);
    Rcpp::traits::input_parameter< int >::type no_T(no_TSEXP);
    Rcpp::traits::input_parameter< int >::type no_L(no_LSEXP);
    Rcpp::traits::input_parameter< List >::type r(rSEXP);
    Rcpp::traits::input_parameter< List >::type a(aSEXP);
    Rcpp::traits::input_parameter< List >::type prev(prevSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type q(qSEXP);
    __result = Rcpp::wrap(calc_lj(no_J, no_I, no_T, no_L, r, a, prev, q));
    return __result;
END_RCPP
}
